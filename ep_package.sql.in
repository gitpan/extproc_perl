-- $Id: ep_package.sql.in,v 1.11 2004/06/24 19:46:31 jeff Exp $

-- create PERL_LIB library
CREATE OR REPLACE LIBRARY PERL_LIB IS
   '-INSTPATH-/extproc_perl.so'
/

show errors

-- Perl PL/SQL Package specification
CREATE OR REPLACE PACKAGE Perl
AS
	FUNCTION func (sub IN VARCHAR2, arg1 in VARCHAR2 default NULL,
		arg2 in VARCHAR2 default NULL, arg3 in VARCHAR2 default NULL,
		arg4 in VARCHAR2 default NULL, arg5 in VARCHAR2 default NULL,
		arg6 in VARCHAR2 default NULL, arg7 in VARCHAR2 default NULL,
		arg8 in VARCHAR2 default NULL, dummy in VARCHAR2 default NULL)
		RETURN STRING;

	PROCEDURE proc (sub IN VARCHAR2, arg1 in VARCHAR2 default NULL,
		arg2 in VARCHAR2 default NULL, arg3 in VARCHAR2 default NULL,
		arg4 in VARCHAR2 default NULL, arg5 in VARCHAR2 default NULL,
		arg6 in VARCHAR2 default NULL, arg7 in VARCHAR2 default NULL,
		arg8 in VARCHAR2 default NULL, dummy in VARCHAR2 default NULL);

	FUNCTION version RETURN STRING;
	PROCEDURE flush;
	PROCEDURE debug(enable in PLS_INTEGER);
	PROCEDURE ddl_format(fmt in VARCHAR2);
	FUNCTION debug_file RETURN STRING;
	FUNCTION debug_status RETURN STRING;
	FUNCTION config(param in VARCHAR2) RETURN STRING;
	FUNCTION package RETURN STRING;
	FUNCTION errno RETURN STRING;
	FUNCTION errsv RETURN STRING;
	PROCEDURE eval(code in VARCHAR2);
	PROCEDURE import_perl(name in VARCHAR2, fname in VARCHAR2 default NULL, proto in VARCHAR2 default NULL);
	PROCEDURE drop_perl(name in VARCHAR2);
	PROCEDURE create_wrapper(proto in VARCHAR2);
END Perl;
/

show error

-- Perl PL/SQL Package body
CREATE OR REPLACE PACKAGE BODY Perl
AS
	FUNCTION func (sub IN VARCHAR2, arg1 in VARCHAR2 default NULL,
		arg2 in VARCHAR2 default NULL, arg3 in VARCHAR2 default NULL,
		arg4 in VARCHAR2 default NULL, arg5 in VARCHAR2 default NULL,
		arg6 in VARCHAR2 default NULL, arg7 in VARCHAR2 default NULL,
		arg8 in VARCHAR2 default NULL, dummy in VARCHAR2 default NULL)
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_func"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE,
			sub string,
			arg1 string,
			arg1 INDICATOR short,
			arg2 string,
			arg2 INDICATOR short,
			arg3 string,
			arg3 INDICATOR short,
			arg4 string,
			arg4 INDICATOR short,
			arg5 string,
			arg5 INDICATOR short,
			arg6 string,
			arg6 INDICATOR short,
			arg7 string,
			arg7 INDICATOR short,
			arg8 string,
			arg8 INDICATOR short,
			dummy string,
			dummy INDICATOR short
		);

	PROCEDURE proc (sub IN VARCHAR2, arg1 in VARCHAR2 default NULL,
		arg2 in VARCHAR2 default NULL, arg3 in VARCHAR2 default NULL,
		arg4 in VARCHAR2 default NULL, arg5 in VARCHAR2 default NULL,
		arg6 in VARCHAR2 default NULL, arg7 in VARCHAR2 default NULL,
		arg8 in VARCHAR2 default NULL, dummy in VARCHAR2 default NULL)
		AS
		EXTERNAL NAME "ora_perl_proc"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			sub string,
			arg1 string,
			arg1 INDICATOR short,
			arg2 string,
			arg2 INDICATOR short,
			arg3 string,
			arg3 INDICATOR short,
			arg4 string,
			arg4 INDICATOR short,
			arg5 string,
			arg5 INDICATOR short,
			arg6 string,
			arg6 INDICATOR short,
			arg7 string,
			arg7 INDICATOR short,
			arg8 string,
			arg8 INDICATOR short,
			dummy string,
			dummy INDICATOR short
		);

	-- return version of extproc_perl
	FUNCTION version
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_version"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE
		);

	-- destroy current perl interpreter, keeping loaded config
	PROCEDURE flush
		AS
		EXTERNAL NAME "ora_perl_flush"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT
		);

	-- enable/disable debugging
	PROCEDURE debug(enable in PLS_INTEGER)
		AS
		EXTERNAL NAME "ora_perl_debug"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			enable INT
		);

	-- set DDL format
	PROCEDURE ddl_format(fmt in VARCHAR2)
		AS
		EXTERNAL NAME "ora_perl_ddl_format"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			fmt string
		);
		
	-- return path to debug file
	FUNCTION debug_file
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_debug_file"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE
		);

	-- return debugging status
	FUNCTION debug_status
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_debug_status"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE
		);

	-- return session package name, if any
	FUNCTION package
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_package"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE
		);

	-- return most recent stringified system error ($!)
	FUNCTION errno
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_errno"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE
		);

	-- return most recent perl eval error (ERRSV, or $@)
	FUNCTION errsv
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_errsv"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE
		);

	-- return configuration parameters
	FUNCTION config(param in VARCHAR2)
		RETURN STRING AS
		EXTERNAL NAME "ora_perl_config"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			RETURN INDICATOR BY REFERENCE,
			param STRING,
			param INDICATOR short
		);

	-- eval arbitrary perl code
	PROCEDURE eval(code in VARCHAR2)
		AS
		EXTERNAL NAME "ora_perl_eval"
		LIBRARY "PERL_LIB"
		WITH CONTEXT
		PARAMETERS (
			CONTEXT,
			code STRING
		);

	-- import code from trusted directory
	PROCEDURE import_perl(name in VARCHAR2, fname in VARCHAR2, proto in VARCHAR2 default NULL)
		IS
		BEGIN
			proc('ExtProc::Code::import_code', name, fname, proto);
		END;
	
	-- drop code from code table
	PROCEDURE drop_perl(name in VARCHAR2)
		IS
		BEGIN
			proc('ExtProc::Code::drop_code', name);
		END;

	-- create C wrapper based on supplied prototype
	PROCEDURE create_wrapper(proto in VARCHAR2)
		IS
		BEGIN
			proc('ExtProc::Code::create_wrapper', proto);
		END;
END Perl;
/

show error
