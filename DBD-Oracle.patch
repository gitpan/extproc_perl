diff -Nuar DBD-Oracle-1.08.orig/dbdimp.c DBD-Oracle-1.08/dbdimp.c
--- DBD-Oracle-1.08.orig/dbdimp.c	Mon Aug  6 20:25:43 2001
+++ DBD-Oracle-1.08/dbdimp.c	Fri Aug 31 09:53:14 2001
@@ -22,6 +22,7 @@
 DBISTATE_DECLARE;
 
 int ora_fetchtest;
+int is_extproc = 0;
 
 static int ora_login_nomsg;	/* don't fetch real login errmsg if true  */
 static int ora_sigchld_restart = 1;
@@ -190,6 +191,8 @@
     sword status;
 
 #ifdef OCI_V8_SYNTAX
+    SV **svp;
+    struct OCIExtProcContext *this_ctx;
     D_imp_drh_from_dbh;
 
     imp_dbh->get_oci_handle = oci_db_handle;
@@ -197,11 +200,34 @@
     if (DBIS->debug >= 6 )
 	dump_env_to_trace();
 
-    if (!imp_drh->envhp) {
+    if (!strncmp(dbname,"extproc",7)) is_extproc = 1;
+    if (!imp_drh->envhp || is_extproc) {
 	/* OCI_OBJECT needed for OCIDescribeAny of table with LOBs else	*/
 	/* you get a core dump (Not doc'd in 8.0.4). Thanks Oracle!	*/
 	ub4 init_mode = OCI_OBJECT;
 	SV **init_mode_sv;
+	if (is_extproc) {
+		svp = DBD_ATTRIB_GET_SVP(attr, "context", 7);
+		if (!svp) croak("pointer to context SV is NULL");
+		if (sv_isa(*svp, "ExtProc::OCIExtProcContext")) {
+			IV tmp = SvIV((SV*)SvRV(*svp));
+			this_ctx = (struct OCIExtProcContext *)tmp;
+		}
+		else {
+			croak("context value is not of type ExtProc::OCIExtProcContext");
+		}
+		if (this_ctx == NULL) croak("context value is NULL");
+		status = OCIExtProcGetEnv(this_ctx,
+			&imp_drh->envhp,
+			&imp_dbh->svchp,
+			&imp_dbh->errhp);
+		if (status != OCI_SUCCESS) {
+			oci_error(dbh, (OCIError*)imp_dbh->envhp, status, "OCIExtProcGetEnv");
+			return 0;
+		}
+		imp_dbh->envhp = imp_drh->envhp;
+		goto dbd_db_login6_out;
+	}
 	DBD_ATTRIB_GET_IV(attr, "ora_init_mode",13, init_mode_sv, init_mode);
 	OCIInitialize_log_stat(init_mode, 0, 0,0,0, status);
 	if (status != OCI_SUCCESS) {
@@ -331,6 +357,7 @@
 
 #endif	/* OCI_V8_SYNTAX */
 
+dbd_db_login6_out:
     DBIc_IMPSET_on(imp_dbh);	/* imp_dbh set up now			*/
     DBIc_ACTIVE_on(imp_dbh);	/* call disconnect before freeing	*/
     imp_dbh->ph_type = 1;
@@ -392,6 +419,9 @@
     /* See DBI Driver.xst file for the DBI approach.	*/
 
 #ifdef OCI_V8_SYNTAX
+    /* extproc deallocates everything for us */
+    if (is_extproc) return 1;
+
     {
         sword s_se, s_sd;
 	OCISessionEnd_log_stat(imp_dbh->svchp, imp_dbh->errhp, imp_dbh->authp,
@@ -423,7 +453,9 @@
     if (DBIc_ACTIVE(imp_dbh))
 	dbd_db_disconnect(dbh, imp_dbh);
 #ifdef OCI_V8_SYNTAX
-    {   sword status;
+    /* extproc does all this for us */
+    if (!is_extproc) {
+        sword status;
 	OCIHandleFree_log_stat(imp_dbh->authp, OCI_HTYPE_SESSION,status);
 	OCIHandleFree_log_stat(imp_dbh->srvhp, OCI_HTYPE_SERVER, status);
 	OCIHandleFree_log_stat(imp_dbh->svchp, OCI_HTYPE_SVCCTX, status);
